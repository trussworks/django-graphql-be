# setup.cfg
[mypy]
# The mypy configurations: https://mypy.readthedocs.io/en/latest/config_file.html
python_version = 3.9
plugins = mypy_django_plugin.main

# GLOBAL RULES 
# These global rules are meant to enforce typechecking requirements
# Do not disable without checking with the technical lead
check_untyped_defs = True
disallow_any_explicit = True
disallow_any_unimported = True
disallow_incomplete_defs = True
disallow_untyped_calls = True
disallow_untyped_decorators = True
disallow_untyped_defs = True
ignore_errors = False
implicit_reexport = False
no_implicit_optional = True
show_error_codes = True
strict_equality = True
strict_optional = True
warn_no_return = True
warn_redundant_casts = True
warn_return_any = True
warn_unreachable = True
warn_unused_configs = True
warn_unused_ignores = True

# MODULE RULES
# Disabling a global rule in a module is allowed but you must 
#   - Explain why the rule must be disabled
#   - Link a new ticket to improve coverage

# TASKS RULES
# These rules apply to the code in tasks/. This is the task runner.
[mypy-invoke.*]
# Invoke currently has no stubs available and there are issues type-hinting it as is. 
# The devs intend to revisit after they drop Python 2 support. 
# https://github.com/pyinvoke/invoke/issues/357
# Ticket to revisit SP-99
ignore_missing_imports = True

[mypy-tasks.*]
# Tasks calls invoke which is untyped. Since this is not a part of our codebase
# but just a runner, we will allow disabling the unimported-any check
# Since invoke also inspects the signature, we disable the untyped decorators check
# The devs intend to revisit after they drop Python 2 support. 
# https://github.com/pyinvoke/invoke/issues/357
# Ticket to revisit SP-99
disallow_untyped_decorators = False

# SERVER RULES
# These rules apply to the code for the Django backend, which includes server/ and api/.
[mypy.plugins.django-stubs]
# This tells the plugin where to look for Django settings
django_settings_module = server.settings
# In api/models.py there is a mysterious "Explicit 'Any' is not allowed [misc]" error on the model definitions.
# This is being ignored inline for now, but there is a ticket to explore solutions:
# https://truss-dds.atlassian.net/browse/SP-113

[mypy-*.migrations.*]
# This disables type-checking on our migrations.
# These are GENERATED files, and are therefore not in our direct control.
# Let Django parse them however it wants.
ignore_errors = True

[mypy-graphene_django.*]
# Graphene-django has no stubs
# Ticket to revisit SP-87
ignore_missing_imports = True

[mypy-snapshottest.*]
# SnapshotTest has no stubs
# Ticket to revisit SP-100
ignore_missing_imports = True